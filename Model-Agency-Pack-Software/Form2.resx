<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAKQAAAG0AAACvAAAA3gAA
        APcAAAD/AAAA/wAAAPcAAADeAAAArwAAAG0AAAApAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAANwAAAJgAAADjAAAA+QAA
        AOYAAADFAAAAqQAAAJoAAACaAAAAqQAAAMUAAADmAAAA+QAAAOMAAACZAAAANwAAAAMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGgAAAIoAAADtAAAA8QAA
        AKsAAABaAAAAJQAAAAsAAAACAAAAAAAAAAAAAAACAAAACwAAACUAAABZAAAAqwAAAPEAAADtAAAAigAA
        ABoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADUAAADDAAAA+QAA
        AKwAAAA7AAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAOwAA
        AKwAAAD5AAAAxAAAADYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBAAAA2gAA
        AOkAAABqAAAACgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAACgAAAGkAAADpAAAA2wAAAEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANgAA
        ANoAAADgAAAASQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAEkAAADgAAAA2gAAADYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        D8Pg//8H8H/+D/gf+B/8AYA//gAAf/+AAf8=
</value>
  </data>
</root>